//Variáveis
$cols: 12;
$gutter: 20px;
$l-device: 1140px;
$m-device: 768px;
$s-device: 480px;

//box-sizing
*, *::after, *::before {
box-sizing: border-box;
}

//Mixin Media Query

@mixin d ($size) {
  @if $size == l {
    @media screen and (min-width: $l-device) {
      @content
    }
  } @else if $size == m {
      @media screen and (min-width: $m-device) and (max-width: $l-device - 1){
        @content
      }
    } @else if $size == s {
        @media screen and (max-width: $m-device - 1){
          @content
        }
  }
}

//Função de grids

@function grid($col, $offset: false) {
  $width: $col / $cols * 100 + "%";
  $result: calc(#{$width} - #{$gutter});
  
  @if $offset == offset {
    $gutter: $gutter / 2;
    $result: calc(#{$width} + #{$gutter});
  }
  @return $result
}

//gera as classes de grid

@for $i from 1 through $cols {
  .grid-#{$i} {
    width: grid($i)
  }
}

//Mixin estrutura do grid

@mixin grid-structure {
  float: left;
  min-height: 1px;
  margin-left: $gutter / 2;
  margin-right: $gutter / 2;
  @include d(s) {
    width: 100%;
    float: none;
    margin-left: 0px;
    margin-right: 0px;
  }
}

[class^="grid-"] {
  @include grid-structure;
}

//gera as classes de offset

@for $i from 1 through $cols {
  .offset-#{$i} {
    margin-left: grid($i, offset);
    @extend %offset
  }
}

@include d(s) {
  %offset {
    margin-left: 0px;
  }
}

//mixin de clearfix

@mixin clearfix {
  &::after, &::before {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin container {
  max-width: $l-device;
  margin: 0 auto;
  position: relative;
  @include d(m) {
    max-width: $m-device;
  }
  @include d(s) {
    max-width: $s-device;
    padding-left: 10px;
    padding-right: 10px;
  }
  @include clearfix
}

.container {
  @include container;
}

@mixin row {
  position: relative;
  margin-left: -$gutter/2;
  margin-right: -$gutter/2;
  @include d(s) {
    margin-left: 0px;
    margin-right: 0px;
  }
  @include clearfix
}

.row {
  @include row
}
